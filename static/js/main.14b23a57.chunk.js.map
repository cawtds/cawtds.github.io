{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["start_position","lat","lng","original_map","latitude","longitude","layerGroup","InitOriginalMap","useMap","L","document","getElementById","setAttribute","calcLocations","clearLayers","resultText","match","console","log","hidden","style","innerHTML","decimalLatIndex","indexOf","decimalLongIndex","replace","long","latitudes","getAllValues","longitudes","map","s","slice","Math","min","getNumLeadingZeros","filter","locations","i","length","j","latLng","push","renderer","canvas","loc","addLayer","circleMarker","fillColor","color","weight","bindPopup","on","e","this","openPopup","addTo","num","startsWith","coordInput","inputArray","split","mask","val","res","len","k","join","handleLatChange","target","value","handleLongChange","App","className","id","onChange","onClick","MapContainer","center","zoom","doubleClickZoom","worldCopyJump","TileLayer","attribution","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.14b23a57.chunk.js","sourcesContent":["import './App.css';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet'\nimport {MapContainer, TileLayer, useMap} from 'react-leaflet';\n\nconst start_position = {lat:51.505, lng:-0.09};\nlet original_map = null;\nlet latitude = '50._796_';\nlet longitude = '__.4_2_3';\nlet layerGroup = null;\n\nfunction InitOriginalMap() {\n  original_map = useMap();\n  layerGroup = L.layerGroup([]);\n  document.getElementById('lat').setAttribute('value', latitude);\n  document.getElementById('long').setAttribute('value', longitude);\n  return null;\n}\n\n\n\nfunction calcLocations() {\n  layerGroup.clearLayers();\n\n  let resultText = document.getElementById('resulttext')\n  if (!latitude.match('^[0-9_]+\\\\.[0-9_]+$')) {\n    console.log('invalid latitude');\n    resultText.hidden = false;\n    resultText.style = 'color: red;';\n    resultText.innerHTML = 'Invalider Breitengrad'\n    return;\n  }\n\n  if (!longitude.match('^[0-9_]+\\\\.[0-9_]+$')) {\n    console.log('invalid longitude');\n    resultText.hidden = false;\n    resultText.style = 'color: red;';\n    resultText.innerHTML = 'Invalider Längengrad'\n    return;\n  }\n\n\n  let decimalLatIndex = latitude.indexOf('.');\n  let decimalLongIndex = longitude.indexOf('.');\n\n  let lat = latitude.replace('.', '');\n  let long = longitude.replace('.', '');\n\n  let latitudes = getAllValues(lat);\n  let longitudes = getAllValues(long);\n\n  \n  latitudes = latitudes.map(s => s.slice(Math.min(getNumLeadingZeros(s), decimalLatIndex), decimalLatIndex) + \".\" + s.slice(decimalLatIndex)).filter(s => s < 55.4 && s > 47.270108);\n  longitudes = longitudes.map(s => s.slice(Math.min(getNumLeadingZeros(s), decimalLongIndex), decimalLongIndex) + \".\" + s.slice(decimalLongIndex)).filter(s => s < 15.033334 &&  s > 5.866666);\n\n  \n  let locations = [];\n  for (let i = 0; i < latitudes.length; i++) {\n    for (let j = 0; j < longitudes.length; j++) {\n      let latLng = new L.latLng(latitudes[i], longitudes[j]);\n      locations.push(latLng);\n    }\n  }\n\n  console.log('# of locations: ' + locations.length);\n\n  if (locations.length > 1e5) {\n    resultText.innerHTML = locations.length + \" mögliche Orte gefunden. Es werden nur 100000 angezeigt.\"\n    resultText.style = 'color: orange;';\n  } else {\n    resultText.innerHTML = locations.length + \" mögliche Orte gefunden\"\n    resultText.style = 'color: green;';\n  }\n  resultText.hidden = false;\n\n\n  var renderer = L.canvas();\n  for (let i = 0; i < Math.min(locations.length, 100000); i++) {\n    let loc = locations[i];\n    layerGroup.addLayer(\n    new L.circleMarker(loc, {\n      fillColor: '#ff0000',\n      color: '#000000',\n      renderer: renderer,\n      weight: 1,\n    })\n    .bindPopup('[' + loc.lat + ', ' +loc.lng +']')\n    .on('mouseover', function(e){\n      this.openPopup();\n    }));\n    layerGroup.addTo(original_map);\n  }\n}\n\nfunction getNumLeadingZeros(s) {\n  let num = 0;\n  if (s.length <= 0) return 0;\n\n  while (s.length > 0 && s.startsWith('0')) {\n    s = s.slice(1, s.length);\n    num++;\n  }\n  return num;\n}\n\nfunction getAllValues(coordInput) {\n  let inputArray = coordInput.split(\"\");\n  let mask = inputArray.map(val => val === '_' ? true : false);\n\n  let res = [''];\n  let i = 0;\n  while (res[0].length < coordInput.length) {\n    if (mask[i]) {\n      let len = res.length;\n      for (let j = 0; j < len; j++) {\n        for (let k = 1; k < 10; k++) {\n          let s = res[j].split(\"\").join(\"\");\n          res.push(s + k);\n        }\n        res[j] += '0';\n      }\n    } else {\n      for (let k = 0; k < res.length; k++) {\n        res[k] += inputArray[i];\n      }\n    }\n    i++;\n  }\n\n  return res;\n}\n\nfunction handleLatChange(e) {\n  latitude = e.target.value;\n}\n\nfunction handleLongChange(e) {\n  longitude = e.target.value;\n}\n\nfunction App(){\n  return (\n    <div className=\"App\">\n      <div className=\"inputs\"> \n        <span>Breitengrad:</span>\n        <input className= 'input' id='lat' onChange={handleLatChange}></input>\n        <span>Längengrad:</span>\n        <input id= 'long' onChange={handleLongChange}></input>\n        <button onClick={calcLocations}>Marker anzeigen</button>\n        <span id='resulttext' hidden={true}></span>\n      </div>\n      <div className=\"maps-container\">\n        <div className=\"leaflet-container\">\n          <MapContainer center={start_position} zoom={3} doubleClickZoom={false} worldCopyJump={true}>\n            <InitOriginalMap />\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n          </MapContainer>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}